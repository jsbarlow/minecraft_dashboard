# Production Docker Compose
# Use this for deploying to production environments

version: '3.8'

services:
  computercraft-server:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: computercraft-server
    restart: unless-stopped
    ports:
      - "${PORT:-8080}:8080"
    environment:
      - NODE_ENV=production
      - PORT=8080
      - HOST=0.0.0.0
      # Add your production environment variables here
      - CORS_ORIGINS=${CORS_ORIGINS:-http://localhost:3000,http://localhost:5173}
      - LOG_LEVEL=${LOG_LEVEL:-info}
    healthcheck:
      test: ["CMD", "node", "-e", "const http = require('http'); const options = { host: 'localhost', port: 8080, path: '/health', timeout: 2000 }; const req = http.request(options, (res) => { process.exit(res.statusCode === 200 ? 0 : 1); }); req.on('error', () => process.exit(1)); req.end();"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    # Optional: Add volume for persistent logs
    # volumes:
    #   - ./logs:/app/logs
    networks:
      - computercraft-network
    # Resource limits (adjust based on your hosting environment)
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

networks:
  computercraft-network:
    driver: bridge

# Optional: Add volume definitions
# volumes:
#   logs:
